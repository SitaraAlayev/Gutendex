version: '3'

services:
  nginx:
    image: nginx:latest
    ports:
    - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - static-files:/usr/share/nginx/static-files:ro
    depends_on:
      - gutendex
    restart: on-failure  
    command: sh -c "sleep 10 && nginx -g 'daemon off;'"
    networks:
      - frontend-gutendex  
  

  gutendex:
    build:
      context: .
      dockerfile: Dockerfile      
    depends_on:
        db:
          condition: service_healthy
    volumes:
      - static-files:/tmp/static-files
    networks:
      - frontend-gutendex
      - backend-gutendex  
    env_file:
      - ./.env  

  

  db:
    image: postgres:14
    environment:
      POSTGRES_DB: gutendex
      POSTGRES_USER: sitara
      POSTGRES_PASSWORD: pass
      PGDATA: /var/lib/postgresql/data
    volumes:
      - pgdata:/var/lib/postgresql/data  
      - ./grant_permission.sql:/docker-entrypoint-initdb.d/grant_permission.sql
    networks:
      - backend-gutendex
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 10s
      timeout: 5s
      retries: 5
volumes:
  static-files:
  pgdata:
 
networks: 
  frontend-gutendex:
  backend-gutendex:
